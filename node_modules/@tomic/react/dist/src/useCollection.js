var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
import { CollectionBuilder, proxyCollection, } from '@tomic/lib';
import { useCallback, useEffect, useMemo, useState } from 'react';
import { useStore } from './hooks.js';
var buildCollection = function (store, server, _a, pageSize) {
    var property = _a.property, value = _a.value, sort_by = _a.sort_by, sort_desc = _a.sort_desc;
    var builder = new CollectionBuilder(store, server);
    property && builder.setProperty(property);
    value && builder.setValue(value);
    sort_by && builder.setSortBy(sort_by);
    sort_desc !== undefined && builder.setSortDesc(sort_desc);
    pageSize && builder.setPageSize(pageSize);
    return builder.build();
};
/**
 * Creates a collection resource that is rebuild when the query filter changes or `invalidateCollection` is called.
 * @param queryFilter
 * @param pageSize number of items per collection resource, defaults to 30.
 */
export function useCollection(queryFilter, _a) {
    var _this = this;
    var _b = _a === void 0 ? {
        pageSize: undefined,
        server: undefined,
    } : _a, pageSize = _b.pageSize, server = _b.server;
    var _c = __read(useState(true), 2), firstRun = _c[0], setFirstRun = _c[1];
    var store = useStore();
    var queryFilterMemo = useQueryFilterMemo(queryFilter);
    var _d = __read(useState(function () {
        return buildCollection(store, server, queryFilterMemo, pageSize);
    }), 2), collection = _d[0], setCollection = _d[1];
    var mapAll = useCallback(function (func) {
        var list = [];
        for (var index = 0; index < collection.totalMembers; index++) {
            list.push(func({ index: index, collection: collection }));
        }
        return list;
    }, [collection]);
    useEffect(function () {
        collection.waitForReady().then(function () {
            setCollection(proxyCollection(collection.__internalObject));
        });
    }, []);
    useEffect(function () {
        if (firstRun) {
            setFirstRun(false);
            return;
        }
        var newCollection = buildCollection(store, server, queryFilterMemo, pageSize);
        newCollection.waitForReady().then(function () {
            setCollection(proxyCollection(newCollection.__internalObject));
        });
    }, [queryFilterMemo, pageSize, store, server]);
    var invalidateCollection = useCallback(function () { return __awaiter(_this, void 0, void 0, function () {
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, collection.refresh()];
                case 1:
                    _a.sent();
                    setCollection(proxyCollection(collection.__internalObject));
                    return [2 /*return*/];
            }
        });
    }); }, [collection, store, server, queryFilter, pageSize]);
    return { collection: collection, invalidateCollection: invalidateCollection, mapAll: mapAll };
}
function useQueryFilterMemo(queryFilter) {
    return useMemo(function () { return queryFilter; }, [
        queryFilter.property,
        queryFilter.value,
        queryFilter.sort_by,
        queryFilter.sort_desc,
    ]);
}
//# sourceMappingURL=useCollection.js.map