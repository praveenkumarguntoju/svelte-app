import { Resource } from './resource.js';

export type JSONPrimitive = string | number | boolean;
export type JSONValue = JSONPrimitive | JSONObject | JSONArray | undefined;
export type JSONObject = {
    [member: string]: JSONValue;
};
export type JSONArray = Array<JSONValue>;
/**
 * Tries to convert the value as an array of resources, which can be both URLs
 * or Nested Resources. Throws an error when fails
 */
export declare function valToArray(val?: JSONValue): JSONArray;
/** Tries to make a boolean from this value. Throws if it is not a boolean. */
export declare function valToBoolean(val?: JSONValue): boolean;
/**
 * Tries to convert the value (timestamp or date) to a JS Date. Throws an error
 * when fails.
 */
export declare function valToDate(val?: JSONValue): Date;
/** Returns a number of the value, or throws an error */
export declare function valToNumber(val?: JSONValue): number;
/** Returns a default string representation of the value. */
export declare function valToString(val: JSONValue): string;
/** Returns either the URL of the resource, or the NestedResource itself. */
export declare function valToResource(val: JSONValue): string | Resource;
//# sourceMappingURL=value.d.ts.map