import { Resource } from './resource.js';

export declare enum ErrorType {
    Unauthorized = "Unauthorized",
    NotFound = "NotFound",
    Server = "Server",
    Client = "Client"
}
/** Pass any error. If the error is an AtomicError and it's Unauthorized, return true */
export declare function isUnauthorized(error?: Error): boolean;
export declare function isAtomicError(error: Error): error is AtomicError;
/**
 * Atomic Data Errors have an additional Type, which tells the client what kind
 * of error to render.
 */
export declare class AtomicError extends Error {
    type: ErrorType;
    /** Creates an AtomicError. The message can be either a plain string, or a JSON-AD Error Resource */
    constructor(message: string, type?: ErrorType);
    static fromResource(r: Resource): AtomicError;
    createMessage(): string;
}
//# sourceMappingURL=error.d.ts.map