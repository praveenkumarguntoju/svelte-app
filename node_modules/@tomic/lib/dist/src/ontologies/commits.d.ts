import { BaseProps } from '../index.js';

export declare const commits: {
    readonly classes: {
        readonly commit: "https://atomicdata.dev/classes/Commit";
    };
    readonly properties: {
        readonly subject: "https://atomicdata.dev/properties/subject";
        readonly createdAt: "https://atomicdata.dev/properties/createdAt";
        readonly lastCommit: "https://atomicdata.dev/properties/lastCommit";
        readonly previousCommit: "https://atomicdata.dev/properties/previousCommit";
        readonly signer: "https://atomicdata.dev/properties/signer";
        readonly set: "https://atomicdata.dev/properties/set";
        readonly push: "https://atomicdata.dev/properties/push";
        readonly remove: "https://atomicdata.dev/properties/remove";
        readonly destroy: "https://atomicdata.dev/properties/destroy";
        readonly signature: "https://atomicdata.dev/properties/signature";
    };
};
export declare namespace Commits {
    type Commit = typeof commits.classes.commit;
}
declare module '../index.js' {
    interface Classes {
        [commits.classes.commit]: {
            requires: BaseProps | typeof commits.properties.createdAt | typeof commits.properties.signature | typeof commits.properties.signer | typeof commits.properties.subject;
            recommends: typeof commits.properties.destroy | typeof commits.properties.remove | typeof commits.properties.set;
        };
    }
    interface PropTypeMapping {
        [commits.properties.subject]: string;
        [commits.properties.createdAt]: number;
        [commits.properties.lastCommit]: string;
        [commits.properties.previousCommit]: string;
        [commits.properties.signer]: string;
        [commits.properties.set]: string;
        [commits.properties.push]: string;
        [commits.properties.remove]: string[];
        [commits.properties.destroy]: boolean;
        [commits.properties.signature]: string;
    }
    interface PropSubjectToNameMapping {
        [commits.properties.subject]: 'subject';
        [commits.properties.createdAt]: 'createdAt';
        [commits.properties.lastCommit]: 'lastCommit';
        [commits.properties.previousCommit]: 'previousCommit';
        [commits.properties.signer]: 'signer';
        [commits.properties.set]: 'set';
        [commits.properties.push]: 'push';
        [commits.properties.remove]: 'remove';
        [commits.properties.destroy]: 'destroy';
        [commits.properties.signature]: 'signature';
    }
}
//# sourceMappingURL=commits.d.ts.map