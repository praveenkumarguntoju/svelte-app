import { BaseProps } from '../index.js';

export declare const dataBrowser: {
    readonly classes: {
        readonly article: "https://atomicdata.dev/classes/Article";
        readonly bookmark: "https://atomicdata.dev/class/Bookmark";
        readonly chatroom: "https://atomicdata.dev/classes/ChatRoom";
        readonly currencyProperty: "https://atomicdata.dev/ontology/data-browser/class/currency-property";
        readonly dateFormat: "https://atomicdata.dev/classes/DateFormat";
        readonly displayStyle: "https://atomicdata.dev/class/DisplayStyle";
        readonly document: "https://atomicdata.dev/classes/Document";
        readonly floatRangeProperty: "https://atomicdata.dev/classes/FloatRangeProperty";
        readonly folder: "https://atomicdata.dev/classes/Folder";
        readonly formattedDate: "https://atomicdata.dev/classes/FormattedDate";
        readonly formattedNumber: "https://atomicdata.dev/classes/FormattedNumber";
        readonly importer: "https://atomicdata.dev/classes/Importer";
        readonly message: "https://atomicdata.dev/classes/Message";
        readonly numberFormat: "https://atomicdata.dev/classes/NumberFormat";
        readonly paragraph: "https://atomicdata.dev/classes/elements/Paragraph";
        readonly rangeProperty: "https://atomicdata.dev/classes/RangeProperty";
        readonly selectProperty: "https://atomicdata.dev/classes/SelectProperty";
        readonly table: "https://atomicdata.dev/classes/Table";
        readonly tag: "https://atomicdata.dev/classes/Tag";
        readonly template: "https://atomicdata.dev/ontology/data-browser/class/template";
    };
    readonly properties: {
        readonly color: "https://atomicdata.dev/properties/color";
        readonly currency: "https://atomicdata.dev/ontology/data-browser/property/currency";
        readonly customNodePositioning: "https://atomicdata.dev/properties/custom-node-positioning";
        readonly dateFormat: "https://atomicdata.dev/properties/dateFormat";
        readonly decimalPlaces: "https://atomicdata.dev/properties/decimalPlaces";
        readonly displayStyle: "https://atomicdata.dev/property/display-style";
        readonly elements: "https://atomicdata.dev/properties/documents/elements";
        readonly emoji: "https://atomicdata.dev/properties/emoji";
        readonly image: "https://atomicdata.dev/ontology/data-browser/property/image";
        readonly imageUrl: "https://atomicdata.dev/properties/imageUrl";
        readonly max: "https://atomicdata.dev/properties/max";
        readonly maxFloat: "https://atomicdata.dev/properties/maxFloat";
        readonly messages: "https://atomicdata.dev/properties/messages";
        readonly min: "https://atomicdata.dev/properties/min";
        readonly minFloat: "https://atomicdata.dev/properties/minFloat";
        readonly nextPage: "https://atomicdata.dev/properties/nextPage";
        readonly numberFormatting: "https://atomicdata.dev/properties/numberFormatting";
        readonly preview: "https://atomicdata.dev/property/preview";
        readonly publishedAt: "https://atomicdata.dev/properties/published-at";
        readonly replyTo: "https://atomicdata.dev/properties/replyTo";
        readonly resources: "https://atomicdata.dev/ontology/data-browser/property/resources";
        readonly subResources: "https://atomicdata.dev/properties/subresources";
        readonly tableColumnWidths: "https://atomicdata.dev/properties/tableColumnWidths";
        readonly tags: "https://atomicdata.dev/properties/tags";
        readonly url: "https://atomicdata.dev/property/url";
    };
};
export declare namespace DataBrowser {
    type Article = typeof dataBrowser.classes.article;
    type Bookmark = typeof dataBrowser.classes.bookmark;
    type Chatroom = typeof dataBrowser.classes.chatroom;
    type CurrencyProperty = typeof dataBrowser.classes.currencyProperty;
    type DateFormat = typeof dataBrowser.classes.dateFormat;
    type DisplayStyle = typeof dataBrowser.classes.displayStyle;
    type Document = typeof dataBrowser.classes.document;
    type FloatRangeProperty = typeof dataBrowser.classes.floatRangeProperty;
    type Folder = typeof dataBrowser.classes.folder;
    type FormattedDate = typeof dataBrowser.classes.formattedDate;
    type FormattedNumber = typeof dataBrowser.classes.formattedNumber;
    type Importer = typeof dataBrowser.classes.importer;
    type Message = typeof dataBrowser.classes.message;
    type NumberFormat = typeof dataBrowser.classes.numberFormat;
    type Paragraph = typeof dataBrowser.classes.paragraph;
    type RangeProperty = typeof dataBrowser.classes.rangeProperty;
    type SelectProperty = typeof dataBrowser.classes.selectProperty;
    type Table = typeof dataBrowser.classes.table;
    type Tag = typeof dataBrowser.classes.tag;
    type Template = typeof dataBrowser.classes.template;
}
declare module '../index.js' {
    interface Classes {
        [dataBrowser.classes.article]: {
            requires: BaseProps | 'https://atomicdata.dev/properties/description' | 'https://atomicdata.dev/properties/name';
            recommends: typeof dataBrowser.properties.tags | typeof dataBrowser.properties.publishedAt;
        };
        [dataBrowser.classes.bookmark]: {
            requires: BaseProps | 'https://atomicdata.dev/properties/name' | typeof dataBrowser.properties.url;
            recommends: typeof dataBrowser.properties.preview | 'https://atomicdata.dev/properties/description' | typeof dataBrowser.properties.imageUrl;
        };
        [dataBrowser.classes.chatroom]: {
            requires: BaseProps | 'https://atomicdata.dev/properties/name';
            recommends: typeof dataBrowser.properties.messages;
        };
        [dataBrowser.classes.currencyProperty]: {
            requires: BaseProps | typeof dataBrowser.properties.currency;
            recommends: never;
        };
        [dataBrowser.classes.dateFormat]: {
            requires: BaseProps | 'https://atomicdata.dev/properties/shortname';
            recommends: never;
        };
        [dataBrowser.classes.displayStyle]: {
            requires: BaseProps | 'https://atomicdata.dev/properties/name';
            recommends: never;
        };
        [dataBrowser.classes.document]: {
            requires: BaseProps;
            recommends: typeof dataBrowser.properties.elements | 'https://atomicdata.dev/properties/name';
        };
        [dataBrowser.classes.floatRangeProperty]: {
            requires: BaseProps;
            recommends: typeof dataBrowser.properties.minFloat | typeof dataBrowser.properties.maxFloat;
        };
        [dataBrowser.classes.folder]: {
            requires: BaseProps | 'https://atomicdata.dev/properties/name' | typeof dataBrowser.properties.displayStyle;
            recommends: typeof dataBrowser.properties.subResources;
        };
        [dataBrowser.classes.formattedDate]: {
            requires: BaseProps | typeof dataBrowser.properties.dateFormat;
            recommends: never;
        };
        [dataBrowser.classes.formattedNumber]: {
            requires: BaseProps | typeof dataBrowser.properties.numberFormatting;
            recommends: typeof dataBrowser.properties.decimalPlaces;
        };
        [dataBrowser.classes.importer]: {
            requires: BaseProps;
            recommends: never;
        };
        [dataBrowser.classes.message]: {
            requires: BaseProps | 'https://atomicdata.dev/properties/description' | 'https://atomicdata.dev/properties/parent';
            recommends: never;
        };
        [dataBrowser.classes.numberFormat]: {
            requires: BaseProps | 'https://atomicdata.dev/properties/shortname';
            recommends: never;
        };
        [dataBrowser.classes.paragraph]: {
            requires: BaseProps | 'https://atomicdata.dev/properties/description' | 'https://atomicdata.dev/properties/parent';
            recommends: never;
        };
        [dataBrowser.classes.rangeProperty]: {
            requires: BaseProps;
            recommends: typeof dataBrowser.properties.min | typeof dataBrowser.properties.max;
        };
        [dataBrowser.classes.selectProperty]: {
            requires: BaseProps | 'https://atomicdata.dev/properties/allowsOnly';
            recommends: typeof dataBrowser.properties.max;
        };
        [dataBrowser.classes.table]: {
            requires: BaseProps | 'https://atomicdata.dev/properties/classtype' | 'https://atomicdata.dev/properties/name';
            recommends: never;
        };
        [dataBrowser.classes.tag]: {
            requires: BaseProps | 'https://atomicdata.dev/properties/shortname';
            recommends: typeof dataBrowser.properties.color | typeof dataBrowser.properties.emoji;
        };
        [dataBrowser.classes.template]: {
            requires: BaseProps | 'https://atomicdata.dev/properties/name' | 'https://atomicdata.dev/properties/description' | typeof dataBrowser.properties.image | typeof dataBrowser.properties.resources;
            recommends: never;
        };
    }
    interface PropTypeMapping {
        [dataBrowser.properties.color]: string;
        [dataBrowser.properties.currency]: string;
        [dataBrowser.properties.customNodePositioning]: string;
        [dataBrowser.properties.dateFormat]: string;
        [dataBrowser.properties.decimalPlaces]: number;
        [dataBrowser.properties.displayStyle]: string;
        [dataBrowser.properties.elements]: string[];
        [dataBrowser.properties.emoji]: string;
        [dataBrowser.properties.image]: string;
        [dataBrowser.properties.imageUrl]: string;
        [dataBrowser.properties.max]: number;
        [dataBrowser.properties.maxFloat]: number;
        [dataBrowser.properties.messages]: string[];
        [dataBrowser.properties.min]: number;
        [dataBrowser.properties.minFloat]: number;
        [dataBrowser.properties.nextPage]: string;
        [dataBrowser.properties.numberFormatting]: string;
        [dataBrowser.properties.preview]: string;
        [dataBrowser.properties.publishedAt]: number;
        [dataBrowser.properties.replyTo]: string;
        [dataBrowser.properties.resources]: string[];
        [dataBrowser.properties.subResources]: string[];
        [dataBrowser.properties.tableColumnWidths]: string;
        [dataBrowser.properties.tags]: string[];
        [dataBrowser.properties.url]: string;
    }
    interface PropSubjectToNameMapping {
        [dataBrowser.properties.color]: 'color';
        [dataBrowser.properties.currency]: 'currency';
        [dataBrowser.properties.customNodePositioning]: 'customNodePositioning';
        [dataBrowser.properties.dateFormat]: 'dateFormat';
        [dataBrowser.properties.decimalPlaces]: 'decimalPlaces';
        [dataBrowser.properties.displayStyle]: 'displayStyle';
        [dataBrowser.properties.elements]: 'elements';
        [dataBrowser.properties.emoji]: 'emoji';
        [dataBrowser.properties.image]: 'image';
        [dataBrowser.properties.imageUrl]: 'imageUrl';
        [dataBrowser.properties.max]: 'max';
        [dataBrowser.properties.maxFloat]: 'maxFloat';
        [dataBrowser.properties.messages]: 'messages';
        [dataBrowser.properties.min]: 'min';
        [dataBrowser.properties.minFloat]: 'minFloat';
        [dataBrowser.properties.nextPage]: 'nextPage';
        [dataBrowser.properties.numberFormatting]: 'numberFormatting';
        [dataBrowser.properties.preview]: 'preview';
        [dataBrowser.properties.publishedAt]: 'publishedAt';
        [dataBrowser.properties.replyTo]: 'replyTo';
        [dataBrowser.properties.resources]: 'resources';
        [dataBrowser.properties.subResources]: 'subResources';
        [dataBrowser.properties.tableColumnWidths]: 'tableColumnWidths';
        [dataBrowser.properties.tags]: 'tags';
        [dataBrowser.properties.url]: 'url';
    }
}
//# sourceMappingURL=dataBrowser.d.ts.map